<?xml version="1.0" encoding="UTF-8"?>
<mule xmlns="http://www.mulesoft.org/schema/mule/core"  xmlns:graphql-router="http://www.mulesoft.org/schema/mule/graphql-router" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd http://www.mulesoft.org/schema/mule/graphql-router http://www.mulesoft.org/schema/mule/graphql-router/current/mule-graphql-router.xsd">
  <flow name="api-main-flow">
    <http:listener config-ref="http-listener-config" path="${http.listener.path}" />
    <graphql-router:route config-ref="api-router-config" />
  </flow>
  <flow name="Query.bookById">
    <graphql-router:data-fetcher config-ref="api-router-config" objectTypeName="Query" fieldName="bookById" />
    <set-payload value="{&#xA;  &quot;id&quot;: &quot;some-id&quot;,&#xA;  &quot;name&quot;: &quot;This is some example data&quot;,&#xA;  &quot;pageCount&quot;: 100,&#xA;  &quot;author&quot;: {&#xA;    &quot;id&quot;: &quot;some-id&quot;,&#xA;    &quot;firstName&quot;: &quot;Goodbye&quot;,&#xA;    &quot;lastName&quot;: &quot;This is some example data&quot;&#xA;  }&#xA;}" mimeType="application/json" />
    <graphql-router:serialize config-ref="api-router-config" objectTypeName="Query" fieldName="bookById" />
  </flow>
  <flow name="Query.books">
    <graphql-router:data-fetcher config-ref="api-router-config" objectTypeName="Query" fieldName="books" />
    <set-payload value="[&#xA;  {&#xA;    &quot;id&quot;: &quot;urn:uuid:123e4567-e89b-12d3-a456-426655440000&quot;,&#xA;    &quot;name&quot;: &quot;This is some example data&quot;,&#xA;    &quot;pageCount&quot;: 1,&#xA;    &quot;author&quot;: {&#xA;      &quot;id&quot;: &quot;#myID&quot;,&#xA;      &quot;firstName&quot;: &quot;Goodbye&quot;,&#xA;      &quot;lastName&quot;: &quot;Goodbye&quot;&#xA;    }&#xA;  },&#xA;  {&#xA;    &quot;id&quot;: &quot;urn:uuid:123e4567-e89b-12d3-a456-426655440000&quot;,&#xA;    &quot;name&quot;: &quot;Goodbye&quot;,&#xA;    &quot;pageCount&quot;: -2,&#xA;    &quot;author&quot;: {&#xA;      &quot;id&quot;: &quot;some-id&quot;,&#xA;      &quot;firstName&quot;: &quot;Hello World!&quot;,&#xA;      &quot;lastName&quot;: &quot;This is some example data&quot;&#xA;    }&#xA;  },&#xA;  {&#xA;    &quot;id&quot;: &quot;urn:uuid:123e4567-e89b-12d3-a456-426655440000&quot;,&#xA;    &quot;name&quot;: &quot;This is some example data&quot;,&#xA;    &quot;pageCount&quot;: -10,&#xA;    &quot;author&quot;: {&#xA;      &quot;id&quot;: &quot;some-id&quot;,&#xA;      &quot;firstName&quot;: &quot;This is some example data&quot;,&#xA;      &quot;lastName&quot;: &quot;This is some example data&quot;&#xA;    }&#xA;  }&#xA;]" mimeType="application/json" />
    <graphql-router:serialize config-ref="api-router-config" objectTypeName="Query" fieldName="books" />
  </flow>
  <flow name="Query.bestsellers">
    <graphql-router:data-fetcher config-ref="api-router-config" objectTypeName="Query" fieldName="bestsellers" />
    <set-payload value="{&#xA;  &quot;books&quot;: [&#xA;    &#xA;  ],&#xA;  &quot;authors&quot;: [&#xA;    {&#xA;      &quot;id&quot;: &quot;#myID&quot;,&#xA;      &quot;firstName&quot;: &quot;Hello World!&quot;,&#xA;      &quot;lastName&quot;: &quot;Goodbye&quot;&#xA;    },&#xA;    {&#xA;      &quot;id&quot;: &quot;urn:uuid:123e4567-e89b-12d3-a456-426655440000&quot;,&#xA;      &quot;firstName&quot;: &quot;This is some example data&quot;,&#xA;      &quot;lastName&quot;: &quot;This is some example data&quot;&#xA;    },&#xA;    {&#xA;      &quot;id&quot;: &quot;some-id&quot;,&#xA;      &quot;firstName&quot;: &quot;Goodbye&quot;,&#xA;      &quot;lastName&quot;: &quot;This is some example data&quot;&#xA;    }&#xA;  ]&#xA;}" mimeType="application/json" />
    <graphql-router:serialize config-ref="api-router-config" objectTypeName="Query" fieldName="bestsellers" />
  </flow>
  <flow name="Book.author">
    <graphql-router:data-fetcher config-ref="api-router-config" objectTypeName="Book" fieldName="author" />
    <set-payload value="{&#xA;  &quot;id&quot;: &quot;urn:uuid:123e4567-e89b-12d3-a456-426655440000&quot;,&#xA;  &quot;firstName&quot;: &quot;Goodbye&quot;,&#xA;  &quot;lastName&quot;: &quot;This is some example data&quot;&#xA;}" mimeType="application/json" />
    <graphql-router:serialize config-ref="api-router-config" objectTypeName="Book" fieldName="author" />
  </flow>
  <flow name="Bestsellers.books">
    <graphql-router:data-fetcher config-ref="api-router-config" objectTypeName="Bestsellers" fieldName="books" />
    <set-payload value="[&#xA;  {&#xA;    &quot;id&quot;: &quot;#myID&quot;,&#xA;    &quot;name&quot;: &quot;Hello World!&quot;,&#xA;    &quot;pageCount&quot;: -10,&#xA;    &quot;author&quot;: {&#xA;      &quot;id&quot;: &quot;urn:uuid:123e4567-e89b-12d3-a456-426655440000&quot;,&#xA;      &quot;firstName&quot;: &quot;Goodbye&quot;,&#xA;      &quot;lastName&quot;: &quot;This is some example data&quot;&#xA;    }&#xA;  },&#xA;  {&#xA;    &quot;id&quot;: &quot;urn:uuid:123e4567-e89b-12d3-a456-426655440000&quot;,&#xA;    &quot;name&quot;: &quot;Goodbye&quot;,&#xA;    &quot;pageCount&quot;: 1,&#xA;    &quot;author&quot;: {&#xA;      &quot;id&quot;: &quot;#myID&quot;,&#xA;      &quot;firstName&quot;: &quot;Goodbye&quot;,&#xA;      &quot;lastName&quot;: &quot;Hello World!&quot;&#xA;    }&#xA;  },&#xA;  {&#xA;    &quot;id&quot;: &quot;some-id&quot;,&#xA;    &quot;name&quot;: &quot;This is some example data&quot;,&#xA;    &quot;pageCount&quot;: -100,&#xA;    &quot;author&quot;: {&#xA;      &quot;id&quot;: &quot;urn:uuid:123e4567-e89b-12d3-a456-426655440000&quot;,&#xA;      &quot;firstName&quot;: &quot;Goodbye&quot;,&#xA;      &quot;lastName&quot;: &quot;Goodbye&quot;&#xA;    }&#xA;  }&#xA;]" mimeType="application/json" />
    <graphql-router:serialize config-ref="api-router-config" objectTypeName="Bestsellers" fieldName="books" />
  </flow>
  <flow name="Bestsellers.authors">
    <graphql-router:data-fetcher config-ref="api-router-config" objectTypeName="Bestsellers" fieldName="authors" />
    <set-payload value="[&#xA;  {&#xA;    &quot;id&quot;: &quot;#myID&quot;,&#xA;    &quot;firstName&quot;: &quot;Goodbye&quot;,&#xA;    &quot;lastName&quot;: &quot;Hello World!&quot;&#xA;  },&#xA;  {&#xA;    &quot;id&quot;: &quot;#myID&quot;,&#xA;    &quot;firstName&quot;: &quot;Goodbye&quot;,&#xA;    &quot;lastName&quot;: &quot;This is some example data&quot;&#xA;  }&#xA;]" mimeType="application/json" />
    <graphql-router:serialize config-ref="api-router-config" objectTypeName="Bestsellers" fieldName="authors" />
  </flow>
</mule>
